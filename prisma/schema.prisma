// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Asset {
  id           String        @id @map("_id")
  ticker       String
  price        Float
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  WalletAssets WalletAsset[]
  Orders       Order[]
}

model Wallet {
  id           String        @id @map("_id")
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  WalletAssets WalletAsset[]
  Orders       Order[]
}

model WalletAsset {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  Wallet    Wallet   @relation(fields: [walletId], references: [id])
  walletId  String   @map("wallet_id")
  Asset     Asset    @relation(fields: [assetId], references: [id])
  assetId   String   @map("asset_id")
  shares    Int      @db.Int
  version   Int
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([walletId, assetId])
}

model Order {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  Wallet       Wallet        @relation(fields: [walletId], references: [id])
  walletId     String        @map("wallet_id")
  Asset        Asset         @relation(fields: [assetId], references: [id])
  assetId      String        @map("asset_id")
  shares       Int           @db.Int
  price        Float
  type         OrderType
  status       OrderStatus
  partial      Int           @db.Int
  version      Int
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  Transactions Transaction[]
}

enum OrderType {
  BUY
  SELL
}

enum OrderStatus {
  PENDING
  OPEN
  CLOSED
  FAILED
}

model Transaction {
  id                  String   @id @default(auto()) @map("_id") @db.ObjectId
  Order               Order    @relation(fields: [orderId], references: [id])
  orderId             String   @map("order_id") @db.ObjectId
  investorId          String
  brokerTransactionId String   @map("broker_transaction_id")
  shares              Int      @db.Int
  price               Float
  createdAt           DateTime @default(now()) @map("created_at")
  updatedAt           DateTime @updatedAt @map("updated_at")
}
